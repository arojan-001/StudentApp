@model Student.WebUI.Models.QnAnsViewModel
@{
    ViewBag.Title = "AddQuestion";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var examid = ViewBag.ExamId;
    var Mark = Student.BLL.Services.QuestionService.GetMark();

}

<h2>Add new Question</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.mark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="mark" class="form-control">
                @foreach (var item in Mark)
                {
                    <option value="@item">@item </option>
                }
                }
            </select>
        </div>

    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.question, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.question, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
        </div>

    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.options[0].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.options[0].Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[0].Answer, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.options[0].Correct_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.options[0].BoolValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[0].Correct_Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.options[1].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.options[1].Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[1].Answer, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.options[1].Correct_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.options[1].BoolValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[1].Correct_Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.options[2].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.options[2].Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[2].Answer, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.options[2].Correct_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.options[2].BoolValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[2].Correct_Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.options[3].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.options[3].Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[3].Answer, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.options[3].Correct_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.options[3].BoolValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[3].Correct_Answer, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.options[4].Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.options[4].Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[4].Answer, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.LabelFor(model => model.options[4].Correct_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.options[4].BoolValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.options[4].Correct_Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to List", "Index", "Exam")
</div>

